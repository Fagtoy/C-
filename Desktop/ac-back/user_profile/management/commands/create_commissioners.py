import random
import string

from django.contrib.auth import get_user_model
from django.core.management import BaseCommand
from translitua import translit

from user_profile.models import UserProfile

User = get_user_model()

class Command(BaseCommand):

    def handle(self, *args, **options):
        odessa_full_names = '''Шляпін Ігор Миколайович
Фесенко Юрій Сергійович
Бахонько Олександр Якович
Науменко Андрій Вікторович
Бєлов Сергій Петрович, голова
Шемонаєв Володимир Юрійович
Бахонько Михайло Якович
Ковалюк Григорій Семенович
Сурай Юрій Вікторович
Шульга Юрій Яковлевич
Вінницький Олександр Георгійович
Пастернак Олег Якович
Шукюров Шукюр Аліулла
Осипов Сергій Васильович
Лось Микола Володимирович
Мацкевич Дмитро Валентинович
Любченко Волдимир Ілліч
Чорнолевський Володимир Миколайович
Криворучко Дмитро Юрійович
Гладушевський Михайло Філаретович
Каліно Григорій Олексійович
Астахов Володимир Володимирович
Шевляков Володимир Тихонович, голова
Войцеховський Микола Петрович
Луценко Костянтин Іванович
Гасанов Руфім Алекперович
Солодовников Валерій Григорович
Курдін Олексій Олександрович
Муха Микола Йосипович
Сафін Віктор Ігоревич
Швець Володимир Петрович
Яворський Владислав Якович
Гаєвський Леонід Васильович
Хитров Валерій Степанович
Липинський Валерій Микитович
Білоус Віктор Степанович
Копьонкін Вячеслав Анатолійович
Манзирков Валерій Васильович
Будіш Іван Іванович
Новосельцев Сергій Георгійович
Рибакова Надія Іванівна
Худін Олександр Анатолійович
Редін Валентин Костянтинович
Черненко Володимир Іванович
Овчинніков Костянтин Олександрович
Соколов Олександр Львович
Орлов Олександр Володимирович'''
        izmail_full_names = '''Варюшкін Володимир Іванович
Пономарьов Анатолій Іванович
Маслов Євген Ананійович
Соколов Одісей Вікторович
Долинський Валерій Йосипович
Лохманюк Олександр Вадимович
Ремезов Олександр Костянтинович 
Соколов Дмитро Олегович'''
        mariupol_full_names = '''Костенко Валерій Іванович
Кандиба Валерій Григорович
Кукін Віктор Анатолійович
Грінінгер Костянтин Едуардович
Перепечаєв Сергій Миколайович
Білоус Олександр Володимирович
Чайковський Василь Олексійович
Носенко Євген Миколайович
Твердохлєбов  Василь Анатолійович
Дрозд Михайло Григорович
Юричковський Валерій Юрійович
Ткачов Андрій Вікторович
Калінін Віктор Миколайович
Шаповалов Олександр Семенович
Поярков Володимир Олексійович
Добровольський Олександр Григорович
Коваленко Олександр Борисович
Потьомкін Віталій Анатолійович
Білоногов Родіон Анатолійович
Нефьодов Олександр Васильович'''
        herson_full_names = '''Артеменко Андрій Григорійович
Єфіменко Володимир Іларіонович
Галицький Леонід Станіславович
Мовчан Микола Афанасійович
Середін Олексій Васильович
Деркач Микола Петрович 
Балюра Олег Григорович
Пономаренко Сергій Альбертович
Рогачевський Онісім Михайлович
Гулев Микола Іванович
Поліщук Володимир Леонідович
Гордієнко Віктор Георгійович
Шапар Леонід Іванович
Гончаров Валерій Іванович
Квакуша Іван Лаврентійович
Каражов Іван Петрович
Ігнатов Іван Стефанович
Ніжник Олег Борисович
Цвелих Євгеній Георгійович'''
        names_branch = ((odessa_full_names, 47), (izmail_full_names, 21),
                        (mariupol_full_names, 48), (herson_full_names, 41))
        chars = string.ascii_uppercase + string.ascii_lowercase + string.digits
        created_users = []
        for full_names, branch_id in names_branch:
            for full_name in full_names.splitlines():
                names = full_name.split(' ')
                last_name = names[0]
                first_name = names[1]
                middle_name = names[2]
                password_size = 20
                username = translit(last_name) + '.' + translit(first_name)
                username = username.lower()
                password = ''.join(random.choice(chars) for x in range(password_size))
                user, _ = User.objects.get_or_create(username=username, first_name=first_name,
                                                last_name=last_name, is_active=False)
                user.set_password(password)
                user.save(update_fields=['password'])
                created_users.append(user.pk)
                up, _ = UserProfile.objects.get_or_create(user=user, branch_office_id=branch_id, middle_name=middle_name,
                                                       city_id=30498, language='UA', is_commissioner=True)




