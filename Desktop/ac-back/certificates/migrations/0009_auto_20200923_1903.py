# Generated by Django 3.1 on 2020-09-23 16:03

from django.db import migrations
from django.db.models import Q


def update_month_ratio(apps, schema_editor):
    app = apps.get_app_config('certificates')
    app.models_module = app.models_module or True
    StatementETI = apps.get_model('statement', 'StatementETI')
    ETIMonthRatio = apps.get_model('back_office', 'ETIMonthRatio')
    CoursePrice = apps.get_model('back_office', 'CoursePrice')
    month_ratio = ETIMonthRatio.objects.all()
    month_ratio.update(month_amount=0)
    statements = StatementETI.objects.filter(is_payed=1, status_document_id=61)
    for statement in statements:
        date = statement.date_meeting
        course_price = CoursePrice.objects.filter(
            (Q(date_end__gte=date) | Q(date_end__isnull=True)) &
            Q(date_start__lte=date) &
            Q(course_id=statement.course_id) & Q(type_of_form='Second')).first()
        if not course_price:
            continue
        try:
            ratio = ETIMonthRatio.objects.get(course_id=statement.course_id, ntz_id=statement.institution_id)
            ratio.month_amount = ratio.month_amount + course_price.price
            ratio.save(update_fields=['month_amount'])
        except ETIMonthRatio.DoesNotExist:
            continue


class Migration(migrations.Migration):
    dependencies = [
        ('certificates', '0008_auto_20200730_2052'),
    ]

    operations = [
        migrations.RunPython(update_month_ratio)
    ]
