# Generated by Django 2.2 on 2019-12-16 20:05

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import pgcrypto.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('directory', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentKeys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.CharField(max_length=255)),
                ('key_document', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='INN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ModeOfNavigation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ukr', models.CharField(max_length=100)),
                ('name_eng', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.CharField(max_length=30)),
                ('date', models.DateField()),
                ('issued_by', models.CharField(max_length=200)),
                ('photo', pgcrypto.fields.TextPGPSymmetricKeyField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='ResponsibleForStatementDKK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio_ukr', models.CharField(max_length=255)),
                ('fio_eng', models.CharField(max_length=255)),
                ('is_disable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_ukr', models.CharField(max_length=20)),
                ('value_eng', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TypeContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TypeGeu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ukr', models.CharField(max_length=10)),
                ('name_eng', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='TypeVessel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ukr', models.CharField(max_length=100)),
                ('name_eng', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.TextField()),
                ('key_document', django.contrib.postgres.fields.jsonb.JSONField()),
                ('document_description', models.TextField()),
                ('standarts_text', models.TextField()),
                ('limitation_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='directory.Limitations')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directory.Position')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRecordSailor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sailor', pgcrypto.fields.IntegerPGPSymmetricKeyField()),
                ('number', models.BigIntegerField()),
                ('issued_by', models.TextField()),
                ('photo', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=200, null=True)),
                ('auth_agent_ukr', models.CharField(max_length=200)),
                ('auth_agent_eng', models.CharField(max_length=200)),
                ('date_issued', models.DateField()),
                ('blank_strict_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='directory.BlankStrictReport')),
                ('branch_office', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.BranchOffice')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.StatusDocument')),
            ],
        ),
        migrations.CreateModel(
            name='SertificateNTZ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ntz_number', models.BigIntegerField()),
                ('date_create', models.DateTimeField(blank=True, null=True)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('course_traning', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='directory.Course')),
                ('ntz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='directory.NTZ')),
                ('status_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='directory.StatusDocument')),
            ],
        ),
        migrations.CreateModel(
            name='SailorStatementDKK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('date_create', models.DateField()),
                ('is_payed', models.BooleanField(default=False)),
                ('sailor', pgcrypto.fields.IntegerPGPSymmetricKeyField()),
                ('photo', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=200, null=True)),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='directory.Position')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='sailor.ResponsibleForStatementDKK')),
                ('type_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='directory.TypeDocument')),
            ],
        ),
        migrations.CreateModel(
            name='SailorPassport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sailor', pgcrypto.fields.IntegerPGPSymmetricKeyField(null=True)),
                ('number_document', models.CharField(max_length=20)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('captain', models.CharField(max_length=255)),
                ('photo', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=200, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.Country')),
                ('port', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.Port')),
                ('status_document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.StatusDocument')),
            ],
        ),
        migrations.CreateModel(
            name='SailorEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sailor', pgcrypto.fields.IntegerPGPSymmetricKeyField()),
                ('number_document', models.CharField(max_length=30)),
                ('date_end_educ', models.DateField(blank=True, null=True)),
                ('date_issue_document', models.DateField(blank=True, null=True)),
                ('special_notes', models.TextField(blank=True, null=True)),
                ('photo', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=250, null=True)),
                ('extent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='directory.ExtentDiplomeUniversity')),
                ('name_nz', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.NZ')),
                ('qualification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='directory.LevelQualification')),
                ('speciality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='directory.Speciality')),
                ('specialization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='specialization', to='directory.Specialization')),
                ('status_document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.StatusDocument')),
                ('type_document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.TypeDocumentNZ')),
            ],
        ),
        migrations.CreateModel(
            name='QualitifcationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sailor', pgcrypto.fields.IntegerPGPSymmetricKeyField()),
                ('number_document', models.CharField(max_length=20)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('photo', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=200, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.City')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.Position')),
                ('status_document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.StatusDocument')),
                ('type_document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.TypeDocument')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_ukr', models.CharField(max_length=200)),
                ('first_name_eng', models.CharField(max_length=200)),
                ('last_name_ukr', models.CharField(max_length=200)),
                ('last_name_eng', models.CharField(max_length=200)),
                ('middle_name_eng', models.CharField(max_length=200)),
                ('middle_name_ukr', models.CharField(max_length=200)),
                ('city', pgcrypto.fields.IntegerPGPSymmetricKeyField()),
                ('street_number_house', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=255, null=True)),
                ('num_flat', pgcrypto.fields.IntegerPGPSymmetricKeyField(blank=True, null=True)),
                ('index_place', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=7, null=True)),
                ('date_birth', pgcrypto.fields.DatePGPSymmetricKeyField()),
                ('INN', pgcrypto.fields.IntegerPGPSymmetricKeyField(blank=True, null=True)),
                ('passport', pgcrypto.fields.IntegerPGPSymmetricKeyField(blank=True, null=True)),
                ('contact_info', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=200, null=True)),
                ('user_id', pgcrypto.fields.IntegerPGPSymmetricKeyField(blank=True, null=True)),
                ('position', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=200, null=True)),
                ('photo', pgcrypto.fields.IntegerPGPSymmetricKeyField(blank=True, null=True)),
                ('sex', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sailor.Sex')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalSertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('sailor', pgcrypto.fields.IntegerPGPSymmetricKeyField()),
                ('date_end', models.DateField()),
                ('date_start', models.DateField()),
                ('photo', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, null=True, max_length=200)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.DoctrorInMedicalInstitution')),
                ('limitation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='directory.Limitations')),
                ('position', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('status_document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.StatusDocument')),
            ],
        ),
        migrations.CreateModel(
            name='LineInServiceRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_vessel', models.CharField(max_length=255)),
                ('ship_owner', models.CharField(max_length=255)),
                ('number_vessel', models.CharField(max_length=15)),
                ('propulsion_power', models.FloatField()),
                ('electrical_power', models.FloatField(blank=True, null=True)),
                ('responsibility', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('refrigerating_power', models.FloatField(blank=True, null=True)),
                ('book_registration_practical', models.BooleanField(default=False)),
                ('equipment_gmzlb', models.BooleanField(default=False)),
                ('date_start', models.DateField()),
                ('place_start', models.CharField(max_length=255)),
                ('place_end', models.CharField(max_length=255)),
                ('date_end', models.DateField()),
                ('trading_area', models.TextField()),
                ('ports_input', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('full_name_master', models.CharField(max_length=200)),
                ('date_write', models.DateField()),
                ('gross_capacity', models.FloatField(blank=True, null=True)),
                ('levelRefrigerPlant', models.FloatField(blank=True, null=True)),
                ('mode_of_navigation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sailor.ModeOfNavigation')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.PositionForExperience')),
                ('service_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sailor.ServiceRecordSailor')),
                ('status_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directory.StatusDocument')),
                ('type_geu', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sailor.TypeGeu')),
                ('type_vessel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sailor.TypeVessel')),
            ],
        ),
        migrations.CreateModel(
            name='ExperinceForDKK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experince_value', django.contrib.postgres.fields.jsonb.JSONField()),
                ('experince_descr', models.TextField()),
                ('standarts_text', models.TextField()),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directory.Position')),
            ],
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200)),
                ('type_contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sailor.TypeContact')),
            ],
        ),
        migrations.CreateModel(
            name='AddictionDKK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.TextField()),
                ('documents_value', django.contrib.postgres.fields.jsonb.JSONField()),
                ('documents_description', models.TextField()),
                ('standarts_text', models.TextField()),
                ('limitation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='directory.Limitations')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directory.Position')),
            ],
        ),
    ]
