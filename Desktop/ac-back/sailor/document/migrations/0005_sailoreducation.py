# Generated by Django 2.2 on 2020-08-10 11:42
import django.contrib.contenttypes.management
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgcrypto.fields
import user_profile.mixins


def update_content_type(apps, schema_editor):
    app = apps.get_app_config('document')
    app.models_module = app.models_module or True
    django.contrib.contenttypes.management.create_contenttypes(app)
    ContentType = apps.get_model('contenttypes', 'ContentType')
    old_ct = ContentType.objects.get(model='sailoreducation', app_label='sailor')
    new_ct = ContentType.objects.get(model='sailoreducation', app_label='document')
    old_ct.app_label = new_ct.app_label
    new_ct.delete()
    old_ct.save(force_update=True)


class Migration(migrations.Migration):
    dependencies = [
        ('statement', '0007_statementsailorpassport'),
        ('directory', '0034_modeofnavigation_typegeu_typevessel'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('document', '0004_auto_20200809_1630'),
        ('docs', '0010_auto_20200811_1808'),
        ('signature', '0011_auto_20200811_1808'),
    ]

    state_operations = [
        migrations.CreateModel(
            name='SailorEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_document', models.CharField(max_length=30)),
                ('serial', models.CharField(blank=True, max_length=50, null=True)),
                ('date_end_educ', models.DateField(blank=True, null=True)),
                ('experied_date', models.DateField(blank=True, null=True)),
                ('date_issue_document', models.DateField(blank=True, null=True)),
                ('special_notes', models.TextField(blank=True, null=True)),
                ('photo', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=250, null=True)),
                ('registry_number', models.CharField(default='', max_length=50)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                             to=settings.AUTH_USER_MODEL)),
                ('extent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                             to='directory.ExtentDiplomeUniversity')),
                ('name_nz', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.NZ')),
                ('qualification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                                    to='directory.LevelQualification')),
                ('speciality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                                 to='directory.Speciality')),
                ('specialization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                                     related_name='specialization', to='directory.Specialization')),
                ('statement_advanced_training',
                 models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                      to='statement.StatementAdvancedTraining')),
                ('status_document',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.StatusDocument')),
                ('type_document',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.TypeDocumentNZ')),
            ],
            options={
                'verbose_name': 'Освітні документи',
            },
            bases=(user_profile.mixins.GetAuthorMixin, models.Model),
        ),
    ]
    operations = [
        migrations.SeparateDatabaseAndState(state_operations=state_operations),
        migrations.RunPython(update_content_type)
    ]
