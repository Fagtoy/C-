# Generated by Django 2.2 on 2020-08-25 13:25
from operator import attrgetter

from django.db import migrations

from sailor.document.utils import get_or_create_commissioner, delete_duplicates_commissioner
from itertools import islice


# def forward_func_add_signer(apps, schema_editor):
#     Protocol = apps.get_model('document', 'ProtocolSQC')
#     Signed = apps.get_model('signature', 'CommissionerSignProtocol')
#     AllCommissioners = apps.get_model('directory', 'AllCommisioner')
#     db_alias = schema_editor.connection.alias
#     for prot in Protocol.objects.using(db_alias).filter(commissioner_sign__isnull=True):
#         head_name = secr_name = '- - -'
#         if hasattr(prot, 'committe'):
#             head_name = getattr(prot.committe, 'FIO_main', '- - -')
#             secr_name = getattr(prot.committe, 'FIO_secretary', '- - -')
#         elif prot.commissioner_sign.exist():
#             head_name = prot.commissioner_sign.filter(commissioner_type='HD').first().name
#             secr_name = prot.commissioner_sign.filter(commissioner_type='SC').first().name
#         head_user, head_comm = find_comission_user(head_name)
#         secretary_user, secretary_comm = find_comission_user(secr_name)
#         comms = []
#         if hasattr(prot, 'commisioners'):
#             comms = prot.commisioners
#         commissioners_names = AllCommissioners.objects.using(db_alias).filter(id__in=comms).values_list(
#             'name', flat=True)
#         Signed.objects.using(db_alias).create(
#             user_id=getattr(head_user, 'id', None),
#             signer_id=getattr(head_comm, 'id', None),
#             protocol_dkk=prot,
#             is_signatured=True,
#             commissioner_type='HD'
#         )
#         Signed.objects.using(db_alias).create(
#             user_id=getattr(secretary_user, 'id', None),
#             signer_id=getattr(secretary_comm, 'id', None),
#             protocol_dkk=prot,
#             is_signatured=True,
#             commissioner_type='SC'
#         )
#         for name in commissioners_names:
#             i = find_comission_user(name)
#             Signed.objects.using(db_alias).create(
#                 user_id=getattr(i[0], 'id', None),
#                 signer_id=getattr(i[1], 'id', None),
#                 protocol_dkk=prot,
#                 is_signatured=True,
#                 commissioner_type='CH'
#             )


def forward_func_add_signer(apps, schema_editor):
    delete_duplicates_commissioner()
    Protocol = apps.get_model('document', 'ProtocolSQC')
    CommissionerSignProtocol = apps.get_model('signature', 'CommissionerSignProtocol')
    AllCommissioners = apps.get_model('directory', 'AllCommisioner')
    db_alias = schema_editor.connection.alias
    bulk_commissioner_sign_protocol = []

    # def bulk_create_iter(iterable, batch_size=500):
    #     """Bulk create supporting generators. Returns only count of created objects."""
    #     created = 0
    #     while True:
    #         objects = CommissionerSignProtocol.objects.bulk_create(islice(iterable, batch_size), ignore_conflicts=True)
    #         created += len(objects)
    #         if not objects:
    #             break
    #     return created

    for prot in Protocol.objects.using(db_alias).filter(commissioner_sign__isnull=True):
        head_name = getattr(prot.committe, 'FIO_main', '- - -')
        author = prot.author
        secr_name = f'{getattr(author, "last_name", "-")} {getattr(author, "first_name", "-")} ' \
                    f'{getattr(getattr(author, "userprofile", "-"), "middle_name", "-")}' if author else None
        secretary_commissioner = get_or_create_commissioner(secr_name, True)
        header_commissioner = get_or_create_commissioner(head_name)
        comms = []
        if hasattr(prot, 'commisioners'):
            comms = prot.commisioners
        commissioners_names = AllCommissioners.objects.filter(id__in=comms).values_list(
            'name', flat=True)
        if secretary_commissioner:
            bulk_commissioner_sign_protocol.append(
                CommissionerSignProtocol(signer_id=secretary_commissioner.pk,
                                         commissioner_type='SC',
                                         protocol_dkk=prot)
            )
        if header_commissioner:
            bulk_commissioner_sign_protocol.append(
                CommissionerSignProtocol(signer_id=header_commissioner.pk,
                                         commissioner_type='HD',
                                         protocol_dkk=prot)
            )
        for commissioner_name in commissioners_names:
            commissioner = get_or_create_commissioner(commissioner_name)
            if commissioner:
                bulk_commissioner_sign_protocol.append(
                    CommissionerSignProtocol(
                        signer_id=commissioner.pk,
                        commissioner_type='CH',
                        protocol_dkk=prot
                    ))
    # bulk_create_iter(bulk_commissioner_sign_protocol)
    CommissionerSignProtocol.objects.bulk_create(bulk_commissioner_sign_protocol, batch_size=500)


def reverse_func(*args, **kwargs):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ('document', '0020_auto_20200824_1907'),
        ('signature', '0015_auto_20200826_1102')
    ]

    operations = [
        migrations.RunPython(forward_func_add_signer, reverse_func),
    ]
