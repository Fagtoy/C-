# Generated by Django 2.2 on 2020-08-11 15:09

import datetime
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import pgcrypto.fields
import sailor.models
import user_profile.mixins


def update_content_type(apps, schema_editor):
    app = apps.get_app_config('document')
    app.models_module = app.models_module or True
    django.contrib.contenttypes.management.create_contenttypes(app)
    ContentType = apps.get_model('contenttypes', 'ContentType')
    old_ct = ContentType.objects.get(model='protocoldkk', app_label='sailor')
    new_ct = ContentType.objects.get(model='protocoldkk', app_label='document')
    old_ct.app_label = new_ct.app_label
    new_ct.delete()
    old_ct.save(force_update=True)


class Migration(migrations.Migration):

    dependencies = [
        ('directory', '0035_experincefordkk'),
        ('statement', '0009_auto_20200811_1808'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('document', '0005_sailoreducation'),
        ('sailor', '0116_auto_20200811_1754'),
        ('docs', '0010_auto_20200811_1808')
    ]

    state_operations = [
        migrations.CreateModel(
            name='ProtocolDKK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_document', models.IntegerField()),
                ('date_meeting', models.DateField(blank=True, null=True)),
                ('commisioners', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('date_create', models.DateTimeField(default=datetime.datetime.now)),
                ('photo', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=200, null=True)),
                ('function_limitation', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('_sailor', pgcrypto.fields.IntegerPGPSymmetricKeyField(default=None, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('is_printeble', models.BooleanField(default=True)),
                ('document_file_docx', models.FileField(blank=True, null=True, upload_to=sailor.models.get_upload_path_protocol)),
                ('document_file_pdf', models.FileField(blank=True, null=True, upload_to=sailor.models.get_upload_path_protocol)),
                ('vchasno_id', models.CharField(blank=True, max_length=200, null=True)),
                ('author', models.ForeignKey(default=161, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('branch_create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='directory.BranchOffice')),
                ('committe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='directory.Committe')),
                ('decision', models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to='directory.Decision')),
                ('statement_dkk', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='statement.SailorStatementDKK')),
                ('status_document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.StatusDocument')),
            ],
            options={
                'abstract': False,
            },
            bases=(user_profile.mixins.GetAuthorMixin, models.Model),
        ),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(state_operations=state_operations),
        migrations.RunPython(update_content_type),
        migrations.RunSQL('alter table sailor_protocoldkk_related_docs rename to'
                          ' document_protocoldkk_related_docs;')
    ]