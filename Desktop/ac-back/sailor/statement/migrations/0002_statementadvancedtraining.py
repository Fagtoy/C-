# Generated by Django 2.2 on 2020-08-08 11:10
import django.contrib.contenttypes.management
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgcrypto.fields


def update_content_type(apps, schema_editor):
    app = apps.get_app_config('statement')
    app.models_module = app.models_module or True
    django.contrib.contenttypes.management.create_contenttypes(app)
    ContentType = apps.get_model('contenttypes', 'ContentType')
    try:
        old_ct = ContentType.objects.get(model='statementadvancedtraining', app_label='sailor')
    except:
        return True
    new_ct = ContentType.objects.get(model='statementadvancedtraining', app_label='statement')
    old_ct.app_label = new_ct.app_label
    new_ct.delete()
    old_ct.save(force_update=True)


class Migration(migrations.Migration):
    dependencies = [
        ('directory', '0031_auto_20200731_1022'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('statement', '0001_initial'),
        ('sailor', '0086_auto_20200808_1408')
    ]

    state_operations = [
        migrations.CreateModel(
            name='StatementAdvancedTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('is_payed', models.BooleanField(default=False)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('photo', pgcrypto.fields.CharPGPSymmetricKeyField(blank=True, max_length=200, null=True)),
                ('date_meeting', models.DateField(null=True)),
                ('date_end_meeting', models.DateField(null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                             to=settings.AUTH_USER_MODEL)),
                ('educational_institution',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.NZ')),
                ('level_qualification',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.LevelQualification')),
                ('status_document',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='directory.StatusDocument')),
            ],
            options={
                'verbose_name': 'Заява на свідоцтво про підвищення кваліфікації',
            },
        ),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(state_operations=state_operations),
        migrations.RunPython(update_content_type)
    ]
